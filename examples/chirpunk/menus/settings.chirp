// The settings menu
fn tab_button(name, index) {
    Entity(named(name) focusable rules(2*, 2*) style(TabButton) row swatch_target(index, Tabs)) {
        Entity(text(name) style(TabText))
    }
}
fn settings_header(name) {
    Entity(named(name) main_margin(40.) width(100%) style(SettingsHeader) distrib_start row) {
        Entity(text(name) style(SettingsHeaderText))
    }
}
// fn settings_row(name default_choice_text options_sizes) {
//     SettingsRow(rules(100%, 1*) row style(OptionRow)) {
//         SettingsText(text(name) style(OptionEntry) width(50%))
//         SettingsBox(row rules(45%, 1.5*) style(OptionBox) main_margin(10)) {
//             LArrow(style(OptionBoxLArrow) height(25px))
//             BoxContent(column rules(1*, 1.2*)) {
//                 BoxSelectedText(style(OptionBoxChoice) text(default_choice_text))
//                 BoxTicks(row rules(1.3*, 1*)) {
//                     for [size, content] in options_sizes {
//                         Tick(rules(size, 3px) option_tick(content))
//                     }
//                 }
//             }
//             RArrow(style(OptionBoxRArrow) height(25px))
//         }
//     }
// }
SettingsMenu(
    layout("vdSaS") root
    wrap scope menu("SETTINGS")
    image("images/settings/background.png")
    screen_root
) {
    // The header consists of (1) the "RETURN" button (2) each individual tab
    Header(row width(100%) height(10%) main_margin(50)) {
        Entity(column rules(100%, 100%)) {
            TabButtons(row rules(100%, 99%) distrib_end) {
                RETURN(cancel text("RETURN (b)") swatch_target(0, Roots) rules(1*, 1*) style(BackText))
                TabBar(row width(79.9%) main_margin(100)) {
                    LB(text("(LB)"))
                    tab_button!("DISPLAY", 0)
                    tab_button!("SOUND", 1)
                    tab_button!("TAB 3", 2)
                    tab_button!("TAB 4", 3)
                    RB(text("(RB)"))
                }
            }
            TabLineSeparator(bg(rgb(255, 98, 81)) rules(100%, 0.99%))
        }
    }
    // all tabs are actually loaded, but only one is shown at the same time
    // The logic is implemented in `examples/cuicui_examples/switch.rs`
    // Here, the `settings_tabs` method inserts ui_events::Tabs marker component that
    // triggers the behaviors implemented by show_menus::Plugin
    AllTabs(layout(">oSaS") main_margin(130) cross_margin(50) settings_tabs rules(100%, 90%)) {
        DisplayMenu(column menu("DISPLAY") rules(100%, 1.5*) layout("vdSaC")) {
            settings_header!("Display")
            "Window mode"(options(Choice(["Windowed","Borderless"])) row rules(100%,1*) settings_row)
            "Mouse lock"(options(Toggle) row rules(100%, 1*) settings_row)
            "Resizable window"(options(Toggle) row rules(100%, 1*) settings_row)
            "Resolution"(options(Choice(["1920x1080","1280x720","720x720"])) row rules(100%,1*) settings_row)
            "Profiler Overlay"(options(Toggle) row rules(100%,1*) settings_row)
        }
        SoundMenu(column menu("SOUND") rules(100%, 1.5*) layout("vdSaC") hidden) {
            settings_header!("Audio Settings")
            // TODO(feat): add Interaction & Focusable to this
            "Master volume"(options(Increments(9)) row rules(100%, 1*) settings_row)
            "Effects volume"(options(Increments(9)) row rules(100%, 1*) settings_row)
            "Music volume"(options(Increments(9)) row rules(100%, 1*) settings_row)
        }
        Tab3Menu(column menu("TAB 3") rules(100%, 1.5*) layout("vdSaC") hidden) {
            settings_header!("Tab 3")
            "Sound effect 1"(options(Click) row rules(100%, 1*) settings_row)
            "Sound effect 2"(options(Click) row rules(100%, 1*) settings_row)
        }
        Tab4Menu(column menu("TAB 4") rules(100%, 1.5*) layout("vdSaC") hidden) {
            settings_header!("Tab 4")
            "Fine grained clicking"(options(Increments(30)) row rules(100%, 1*) settings_row)
            "UI highlight color"(settings_row row rules(100%,1*) options(Choice([
                "aliceblue", "antiquewhite", "aqua",           "aquamarine",
                "chocolate", "coral",        "cornflowerblue", "cornsilk",
                "darkgreen", "darkkhaki",    "darkmagenta",    "darkolivegreen",
                "gray",      "green",        "greenyellow",    "honeydew",
                "lawngreen", "lemonchiffon", "lightblue",
            ])))
        }
    }
}
// vim: set syntax=ron
